% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_patient_profile.R
\name{patient_domain_profile}
\alias{patient_domain_profile}
\title{Patient Profile Plot}
\usage{
patient_domain_profile(
  domain = NULL,
  var_names,
  marker_pos,
  arrow_end,
  ytick_at = 40,
  line_col = NULL,
  line_col_legend = NULL,
  line_col_opt = NULL,
  line_width = 1,
  arrow_size = 0.1,
  no_enddate_extention = 0,
  marker_color = NULL,
  marker_color_opt = NULL,
  marker_color_legend = NULL,
  marker_shape = NULL,
  marker_shape_opt = NULL,
  marker_shape_legend = NULL,
  show_days_label = TRUE,
  ylim = c(-28, max(marker_pos) + 5),
  ylab = NULL,
  show_title = TRUE,
  title = NULL
)
}
\arguments{
\item{domain}{string of domain name to be shown as x-axis label, default is \code{NULL}}

\item{var_names}{vector to identify each lane}

\item{marker_pos}{numeric vector for EX, LB and RS domain, numeric data frame with two columns for AE or CM domain}

\item{arrow_end}{numeric value indicates the end of arrow when arrows are requested}

\item{ytick_at}{optional break interval of bar length axis}

\item{line_col}{factor vector to specify color for segments, default is \code{NULL}}

\item{line_col_legend}{string to be displayed as line color legend title, default is \code{NULL}}

\item{line_col_opt}{aesthetic values to map color values (named vector to map color values to each name).
If not \code{NULL}, please make sure this contains all posible values for \code{line_col} values,
otherwise color will be assigned by \code{ggplot} default, please note that \code{NULL} needs to be specified}

\item{line_width}{numeric value for segment width, default is \code{line_width = 1}}

\item{arrow_size}{numeric value for arrow size, default is \code{arrow_size = 0.1}}

\item{no_enddate_extention}{numeric value for extending the arrow when end date is missing for AE or CM domain,
default is \code{no_enddate_extention = 0}}

\item{marker_color}{factor vector to specify color for markers, default is \code{NULL}}

\item{marker_color_opt}{aesthetic values to map color values (named vector to map color values to each name).
If not \code{NULL}, please make sure this contains all posible values for \code{marker_color} values,
otherwise color will be assigned by \code{ggplot} default, please note that \code{NULL} needs to be specified}

\item{marker_color_legend}{string to be displayed as marker color legend title, default is \code{NULL}}

\item{marker_shape}{factor vector to specify shape for markers, default is \code{NULL}}

\item{marker_shape_opt}{aesthetic values to map shape values (named vector to map shape values to each name).
If not \code{NULL}, please make sure this contains all posible values for \code{marker_shape} values,
otherwise shape will be assigned by \code{ggplot} default, please note that \code{NULL} needs to be specified}

\item{marker_shape_legend}{string to be displayed as marker shape legend title, default is \code{NULL}}

\item{show_days_label}{boolean value for showing y-axis label, default is \code{TRUE}}

\item{ylim}{numeric vector for y-axis limit, default is
\code{ylim = c(-28, max(marker_pos) + 5)}}

\item{ylab}{string to be shown as y-axis label, default is \code{NULL}}

\item{show_title}{boolean value for showing title of the plot, default is \code{TRUE}}

\item{title}{string to be shown as title of the plot, default is \code{NULL}}
}
\value{
plot object
}
\description{
Patient profile plot provides detailed information for a specific subject participated in the study.
The plot includes relevant data for one subject that can help correlate adverse events, concomitant medications,
exposures, labs, etc. The plotting of patient profile is modularized,
each domain plot is one module, generated by function \code{patient_domain_profile},
function \code{g_patient_profile} assembles
all requested domain plots into one patient profile.
ADSL, ADEX, ADAE, ADRS, ADCM and ADLB data must be provided.
If there is a missing dataset, assign a NULL value to it. ie) ADRS <- NULL
prior to running the patient profile plot.
}
\examples{

library(random.cdisc.data)
library(utils.nest)
library(tern)

#Data preparation
sl_start_date <- "TRTSDT"

## ADSL
rADSL <- radsl(cached = TRUE) # nolint
ADSL <-  rADSL \%>\% # nolint
  group_by(.data$USUBJID) \%>\%
  mutate(TRTSDT = as.Date(.data$TRTSDTM, "\%d\%b\%Y"),
        # if there are missing LSTALVDT or DTHDT, use max_date = max(as.Date(.data$LSTALVDT, "\%d\%b\%Y"), as.Date(.data$DTHDT, "\%d\%b\%Y"), na.rm=TRUE)
         max_date = max(as.Date(.data$LSTALVDT, "\%d\%b\%Y"), as.Date(.data$DTHDT, "\%d\%b\%Y")),
  ) \%>\%
  mutate(max_day = as.numeric(as.Date(.data$max_date) -
  as.Date(eval(parse(text = sl_start_date)), "\%d\%b\%Y")) + 1) \%>\%
  filter(USUBJID == rADSL$USUBJID[1])

## ADAE
rADAE <- radae(cached = TRUE) # nolint

if("TRTSDT" \%in\% names(rADAE)){
ADAE <- left_join(ADSL, rADAE, by = c("USUBJID", "STUDYID", "TRTSDT"))
} else {
  ADAE <- left_join(ADSL, rADAE, by = c("USUBJID", "STUDYID"))
}

ADAE <- ADAE \%>\% # nolint
  filter(!is.na(ASTDTM)) \%>\%
  mutate(ASTDY = ceiling(as.numeric(difftime(ASTDTM, as.Date(substr(as.character(eval(parse(text = sl_start_date))), 1, 10)),
                                             units = "days")))) \%>\%
  filter(!is.na(AENDTM)) \%>\%
  mutate(AENDY = ceiling(as.numeric(difftime(AENDTM, as.Date(substr(as.character(eval(parse(text = sl_start_date))), 1, 10)),
                                             units = "days")))) \%>\%
  select(USUBJID, AESOC, AEDECOD, AESER, AETOXGR, AREL, ASTDY, AENDY)

## ADRS
rADRS <- radrs(cached = TRUE) #nolint

if("TRTSDT" \%in\% names(rADRS)){
  ADRS <- left_join(ADSL, rADRS, by = c("USUBJID", "STUDYID", "TRTSDT"))
} else {
  ADRS <- left_join(ADSL, rADRS, by = c("USUBJID", "STUDYID"))
}

ADRS <- ADRS \%>\% # nolint
  mutate(ADY = ceiling(as.numeric(difftime(ADTM,
                                           as.Date(substr(as.character(eval(parse(text = sl_start_date))), 1, 10)), units = "days")))) \%>\%
  select(USUBJID, PARAMCD, PARAM, AVALC, AVAL, ADY, ADTM) \%>\%
  filter(is.na(ADY) == FALSE)

## ADCM
rADCM <- radcm(cached = TRUE) # nolint
if("TRTSDT" \%in\% names(rADCM)){
  ADCM <- left_join(ADSL, rADCM, by = c("USUBJID", "STUDYID", "TRTSDT"))
} else {
  ADCM <- left_join(ADSL, rADCM, by = c("USUBJID", "STUDYID"))
}

ADCM <- ADCM \%>\% # nolint
  filter(!is.na(ASTDTM)) \%>\%
  mutate(ASTDY = ceiling(as.numeric(difftime(ASTDTM, as.Date(substr(as.character(eval(parse(text = sl_start_date))), 1, 10)),
                                             units = "days")))) \%>\%
  filter(!is.na(AENDTM)) \%>\%
  mutate(AENDY = ceiling(as.numeric(difftime(AENDTM, as.Date(substr(as.character(eval(parse(text = sl_start_date))), 1, 10)),
                                             units = "days")))) \%>\%
  select(USUBJID, CMDECOD, ASTDTM, AENDTM, ASTDY, AENDY)

if (length(unique(ADCM$USUBJID)) > 0) {
  ADCM <- ADCM[which(ADCM$AENDY >= -28 | is.na(ADCM$AENDY) == TRUE
                     & is.na(ADCM$ASTDY) == FALSE), ]
}

#ADEX
rADEX <- radex(cached = TRUE) # nolint

if("TRTSDT" \%in\% names(rADEX)){
  ADEX <- left_join(ADSL, rADEX, by = c("USUBJID", "STUDYID", "TRTSDT"))
} else {
  ADEX <- left_join(ADSL, rADEX, by = c("USUBJID", "STUDYID"))
}

ADEX <- ADEX \%>\% # nolint
  filter(PARCAT1 == "INDIVIDUAL" & PARAMCD == "DOSE" & !is.na(AVAL)) \%>\%
  filter(!is.na(ASTDTM)) \%>\%
  select(USUBJID, ASTDTM, PARCAT2, AVAL, AVALU, PARAMCD, TRTSDT)

ADEX <- split(ADEX, ADEX$USUBJID) \%>\% # nolint
  lapply(function(pinfo) {
    pinfo \%>\%
      arrange(PARCAT2, PARAMCD) \%>\%
      ungroup \%>\%
      mutate(diff = c(0, diff(AVAL, lag = 1))) \%>\%
      mutate(Modification = case_when(diff < 0 ~ "Decrease",
                                      diff > 0 ~ "Increase",
                                      diff == 0 ~ "None")) \%>\%
      mutate(ASTDT_dur = as.numeric(as.Date(substr(as.character(ASTDTM), 1, 10)) -
                                      as.Date(substr(as.character(eval(parse(text = sl_start_date))), 1, 10))) + 1)
  })  \%>\%
  Reduce(rbind, .) \%>\%
  as.data.frame \%>\%
  select(-diff)

## ADLB
rADLB <- radlb(cached = TRUE) # nolint

if("TRTSDT" \%in\% names(rADLB)){
  ADLB <- left_join(ADSL, rADLB, by = c("USUBJID", "STUDYID", "TRTSDT"))
} else {
  ADLB <- left_join(ADSL, rADLB, by = c("USUBJID", "STUDYID"))
}

ADLB <- ADLB \%>\% # nolint
  group_by(USUBJID) \%>\%
  mutate(LBSTRESC = as.numeric(.data$LBSTRESC),
         ANRIND = factor(.data$ANRIND, levels = c("HIGH", "LOW", "NORMAL"))) \%>\%
  filter(is.na(.data$LBSTRESC) == FALSE & is.na(.data$ANRIND) == FALSE) \%>\%
  as.data.frame \%>\%
  select(USUBJID, STUDYID, LBSEQ, PARAMCD, BASETYPE, ADTM, ATPTN, AVISITN, TRTSDT, LBTESTCD, ANRIND)

ADLB <- ADLB \%>\%  # nolint
  mutate(ADY = ceiling(as.numeric(difftime(.data$ADTM,
                                           as.Date(substr(as.character(eval(parse(text = sl_start_date))), 1, 10)),
                                           units = "days"))))


# Example 1 "ADEX"
p1 <- patient_domain_profile(domain = "ADEX",
                             var_names = ADEX$PARCAT2,
                             marker_pos = ADEX$ASTDT_dur,
                             arrow_end = ADSL$max_day,
                             ytick_at = waiver(),
                             line_col = NULL,
                             line_col_legend = NULL,
                             line_col_opt = NULL,
                             line_width = 1,
                             arrow_size = 0.1,
                             no_enddate_extention = 0,
                             marker_color = factor(ADEX$Modification),
                             marker_color_opt =  c("Increase" = "red",
                             "Decrease" = "green", "None" = "blue"),
                             marker_color_legend = NULL,
                             marker_shape = factor(ADEX$Modification),
                             marker_shape_opt = c("Increase" = 24, "Decrease" = 25, "None" = 23),
                             marker_shape_legend = "Dose Modification",
                             show_days_label = TRUE,
                             ylim = c(-28, 250),
                             ylab = "Study Days",
                             title = paste("Patient Profile: ", ADSL$USUBJID))
p1

# Example 2 "ADAE"
# Note that ASTDY is represented by a circle and AENDY is represented by a square.
# If AENDY and ASTDY occur on the same day only AENDY will be shown.

p2

# Example 3 "ADRS"
p3 <- patient_domain_profile(domain = "ADRS",
                             var_names = ADRS$PARAMCD,
                             marker_pos = ADRS$ADY,
                             arrow_end = ADSL$max_day,
                             ytick_at = waiver(),
                             line_col = NULL,
                             line_col_legend = NULL,
                             line_col_opt = NULL,
                             line_width = 1,
                             arrow_size = 0.1,
                             no_enddate_extention = 0,
                             marker_color = factor(ADRS$AVALC),
                             marker_color_opt =  c("CR" = "green", "PR" = "blue",
                             "SD" = "yellow", "PD" = "red", "NE" = "pink",
                             "Y" = "lightblue", "N" = "darkred"),
                             marker_color_legend = NULL,
                             marker_shape = factor(ADRS$AVALC),
                             marker_shape_opt = c("CR" = 21, "PR" = 24,
                             "SD" = 23, "PD" = 22, "NE" = 14,
                             "Y" = 11, "N" = 8),
                            marker_shape_legend = "Response",
                             show_days_label = TRUE,
                             ylim = c(-28, 250),
                             ylab = "Study Days",
                             title = paste("Patient Profile: ", ADSL$USUBJID))
p3

# Example 4 "ADCM"
p4 <- patient_domain_profile(domain = "ADCM",
                             var_names = ADCM$CMDECOD,
                             marker_pos = ADCM[, c("ASTDY", "AENDY")],
                             arrow_end = ADSL$max_day,
                             ytick_at = waiver(),
                             line_col = NULL,
                             line_col_legend = NULL,
                             line_col_opt = "orange",
                             line_width = 1,
                             arrow_size = 0.1,
                             no_enddate_extention = 50,
                             marker_color = NULL,
                             marker_color_opt = "orange",
                             marker_color_legend = NULL,
                             marker_shape = NULL,
                             marker_shape_opt = NULL,
                             marker_shape_legend = NULL,
                             show_days_label = TRUE,
                             ylim = c(-28, 250),
                             ylab = "Study Days",
                             title = paste("Patient Profile: ", ADSL$USUBJID))
p4

# Example 5 "ADLB"
p5 <- patient_domain_profile(domain = "ADLB",
                             var_names = ADLB$LBTESTCD,
                             marker_pos = ADLB$ADY,
                             arrow_end = ADSL$max_day,
                             ytick_at = waiver(),
                             line_col = NULL,
                             line_col_legend = NULL,
                             line_col_opt = NULL,
                             line_width = 1,
                             arrow_size = 0.1,
                             no_enddate_extention = 0,
                             marker_color = factor(ADLB$ANRIND),
                             marker_color_opt =  c("HIGH" = "red", "LOW" = "blue",
                                                   "NORMAL" = "green", "NA" = "green"),
                             marker_color_legend = NULL,
                             marker_shape = factor(ADLB$ANRIND),
                             marker_shape_opt = c("HIGH" = 24, "LOW" = 25,
                                                  "NORMAL" = 23, "NA" = 23),
                             marker_shape_legend = "Labs Abnormality",
                             show_days_label = TRUE,
                             ylim = c(-30, 250),
                             ylab = "Study Days",
                             title = paste("Patient Profile: ", ADSL$USUBJID))
p5
}
\author{
Xuefeng Hou (houx14) \email{houx14@gene.com} Tina Cho (chot) \email{tina.cho@roche.com}

Ting Qi (qit3) \email{qit3@gene.com}
}
